use scripting additionsuse framework "Foundation"use framework "AppKit"property appMenu : class "NSMenu"-- check we are running in foreground - YOU MUST RUN AS APPLICATION. to be thread safe and not crashif not (current application's NSThread's isMainThread()) as boolean then	display alert "This script must be run from the main thread." buttons {"Cancel"} as critical	error number -128end ifmakeStatusBar()on menuNeedsUpdate:(menu)	my refreshMenu()end menuNeedsUpdate:on refreshMenu()		-- remove existing menu items	appMenu's removeAllItems()		-- read passwordMap from file	set passwordMap to my readPassword()		set passwordList to {}	set passwordStringList to {}		-- seperate and extract out passwordTitle	-- and passwords from the passwordMap	repeat with index from 1 to count passwordMap		set mappedString to item index of passwordMap		set map to splitText(mappedString, ":")				set passwordTitle to item 1 of map		set passwordString to item 2 of map				set passwordList to passwordList & passwordTitle		set passwordStringList to passwordStringList & passwordString	end repeat		set passwordList to passwordList & "Generate New Password"	set passwordStringList to passwordStringList & "New Password"		try		repeat with index from 1 to count passwordList			set passwordTitle to item index of passwordList as string			set passwordString to item index of passwordStringList as string						if index is equal to (count passwordList) then				set clickAction to "generatePasswordClicked:"			else				set clickAction to "passwordItemClicked:"			end if						set menuItem to (current application's NSMenuItem's alloc()'s initWithTitle:passwordTitle action:clickAction keyEquivalent:"")						(appMenu's addItem:menuItem)						(menuItem's setTarget:me) -- required for enabling the menu item						-- tag used to retrieve when item is clicked			(menuItem's setRepresentedObject:passwordString)						if index is equal to (count passwordList) - 1 then				set separator to (current application's NSMenuItem's separatorItem)				(appMenu's addItem:separator)			end if		end repeat	on error errorMsg		display alert errorMsg	end try	end refreshMenuon generatePasswordClicked:sender	writePassword()end generatePasswordClicked:on passwordItemClicked:sender	set clickedTitle to title of sender	set clickedPassword to representedObject of sender as string		set the clipboard to clickedPassword	display notification ("Password for " & clickedTitle & " has been copied to clipboard") with title "Password copied"end passwordItemClicked:-- create an NSStatusBaron makeStatusBar()	set bar to current application's NSStatusBar's systemStatusBar		set StatusItem to bar's statusItemWithLength:-1.0		-- set up the initial NSStatusBars title	StatusItem's setTitle:"MyPass"		-- set up the initial NSMenu of the statusbar	set appMenu to current application's NSMenu's alloc()'s initWithTitle:"Custom"		-- delegate the menuNeedsUpdate function to be triggered from this class itself	appMenu's setDelegate:me		StatusItem's setMenu:appMenu	end makeStatusBar-- ------------------------------------- Read passwords list-- -----------------------------------on writePassword()	set documentsPath to path to documents folder as text	set passwordScript to (POSIX path of documentsPath) & "innovation day/Password Generator/script/password.scpt"	run script passwordScriptend writePasswordon readPassword()	try		set logFile to (path to documents folder) as text		set theFolder to POSIX path of logFile		set passwordFile to theFolder & "password.txt"		open for access passwordFile		set fileContents to paragraphs of (read passwordFile)		close access passwordFile		return fileContents	on error errorMsg		return {}	end tryend readPasswordon splitText(theText, theDelimiter)	set AppleScript's text item delimiters to theDelimiter	set theTextItems to every text item of theText	set AppleScript's text item delimiters to ""	return theTextItemsend splitText